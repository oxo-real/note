#[Verifying you're connected to Codeberg using SSH fingerprints | Codeberg Documentation](https://docs.codeberg.org/security/ssh-fingerprint/)
#
# generate keys

ssh-keygen -t ed25519 -C 0x3 -f keys/ssh/0x3

## OR

ssh-keygen -t ed25519-sk -C 0x3 -f keys/ssh/0x3-sk

## for auto authentication with ssh file present; upload 0x3
## for additional authentication with a yubikey; upload 0x3-sk


# correct key file (dir) permissions

## private key file
### symbolic form
chmod a=-,u+rw keys/ssh/0x3
### OR equivalent octal form
chmod 600 keys/ssh/0x3

## public key file
### symbolic form
chmod a=r,u+w keys/ssh/0x3.pub
## OR equivalent octal form
chmod 644 keys/ssh/0x3.pub

## set key directory permissions
### symbolic form
chmod a=-,u+rwx keys/ssh
## OR equivalent octal form
chmod 700 keys/ssh


#==========================================


# start ssh-agent persistent in the background
% eval $(ssh-agent)
# eval `ssh-agent -s`

# add keyfile to agent
ssh-add keys/ssh/0x3

# upload ssh key
# WARNING! not the private key!
\cat keys/ssh/0x3.pub | wl-copy -n

# verify ssh key
# sign with private key
echo -n "$token_to_verify" | ssh-keygen -Y sign -n gitea -f keys/ssh/0x3

# test codeberg git ssh connection
ssh -i keys/ssh/0x3 -T git@codeberg.org

# ~/.ssh/config example
Host $short_reference_name
    Hostname 9.9.9.9
    User admin
    Port 2222
    IdentityFile $private_key_file

Host $short_reference_name
    Hostname 9.9.9.9
    User admin
    Port 2222
    IdentityFile $private_key_file
