# file locations

## local sync databases
/var/lib/pacman/sync
community.db  core.db  extra.db  multilib.db

## downloaded packages
/var/cache/pacman/pkg
this location can be cleaned with use of the application 'paccache'

## installed packages
/var/lib/pacman/local

## mirrorlist
/etc/pacman.d/mirrorlist
contains remote servers

## remote sync databases
<mirrorlist_server>/core.db
<mirrorlist_server>/community.db
<mirrorlist_server>/extra.db
<mirrorlist_server>/multilib.db

# resources

## pacman restore local database
https://wiki.archlinux.org/index.php/Pacman/Restore_local_database

## ~/git/notes/yay

## generate mirrorlist
reflector --verbose --country Sweden -l 5 --sort rate --save /etc/pacman.d//mirrorlist


# on error
:: Starting full system upgrade...
error: could not open file /var/lib/pacman/sync/multilib.db: Unrecognized archive format
error: failed to prepare transaction (invalid or corrupted database)
Error installing repo packages

## force update the repository lists
yay -Syyu

# download a package without installing
pacman -Sw package_name

# install a 'local' package that is not from a remote repository (e.g. the package is from the AUR):
pacman -U /path/to/package/package_name-version.pkg.tar.xz

# keep a copy of the local package in pacman's cache, use:
pacman -U file:///path/to/package/package_name-version.pkg.tar.xz

# install a 'remote' package (not from a repository stated in pacman's configuration files):

pacman -U http://www.example.com/repo/example.pkg.tar.xz

To inhibit the -S, -U and -R actions, -p can be used.

Pacman always lists packages to be installed or removed and asks for permission before it takes action.
https://wiki.archlinux.org/index.php/Pacman


# package signing
# https://wiki.archlinux.org/title/Pacman/Package_signing#Resetting_all_the_keys
#
# Cannot import keys

## upgrade system
pacman -Syu

## change keyserver
/etc/pacman.d/gnupg/gpg.conf
i.e.: keyserver hkp://keyserver.ubuntu.com

## clean cached packages
pacman -Sc (removes packages that are not installed)


# Signature is unknown trust

## refresh keys
pacman-key --refresh-keys

## manually signing untrusted key locally
# https://wiki.archlinux.org/title/Pacman/Package_signing#Adding_unofficial_keys
This method can be utilized to add a key to the pacman keyring,
or to enable signed unofficial user repositories.

First, get the key ID (keyid) from its owner.
Then add it to the keyring using one of the two methods:

1.	If the key is found on a keyserver, import it with:

% pacman-key --recv-keys keyid

2.	If otherwise a link to a keyfile is provided, download it and then run:

% pacman-key --add /path/to/downloaded/keyfile

It is recommended to verify the fingerprint,
as with any master key or any other key you are going to sign:

% pacman-key --finger keyid

Finally, you must locally sign the imported key:

% pacman-key --lsign-key keyid

You now trust this key to sign packages.

Debugging with gpg
For debugging purposes, you can access pacman's keyring directly with gpg, e.g.:

% gpg --homedir /etc/pacman.d/gnupg --list-keys

## reset all keys
sudo rm -rf /etc/pacman.d/gnupg
pacman-key --init
pacman-key --populate archlinux


## reduce SigLevel
/etc/pacman.conf
SigLevel = TrustAll (NOT recommended)
