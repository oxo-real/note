#!/bin/sh

## convert all $indir/*.fit files to $out_dir/*.gpx

## usage:
### single fit file
#### fit2gpx -i file.fit [-o file.gpx]
### all fit files in directory
#### fit2gpx -i $in_dir [-o $out_dir]

# example:
# rsync -aAXv --recursive --info=progress2 --files-from=$XDG_CONFIG_HOME/rsync/garmin_gpsmap_67_files_from_list $HOME/dock/gps/Internal\ Storage/GARMIN/ $XDG_DATA_HOME/d/gps/garmin/gpsmap/67
# sh /home/oxo/c/git/note/navigation/fit2gpx -i $XDG_DATA_HOME/d/gps/garmin/gpsmap/67/Activities -o $XDG_DATA_HOME/d/gps/garmin/gpsmap/67/Activities

optstring=":i:o:h"
while getopts $optstring opt; do

    case $opt in

	i)
	    ## in_dir
	    in_dir="${OPTARG}"
	    ;;

	o)
	    ## out_dir
	    out_dir="${OPTARG}"
	    ;;

	h)
	    ## -h display help text
	    printf "$script_name usage: $script_usage"
	    exit 26
	    ;;

	\?)
	    printf "$script_name ${RED}invalid option: -${OPTARG}${NOC}"
	    exit 31
	    ;;

	:)
	    ## display help
	    printf "$script_name: ${RED}option -${OPTARG} requires an argument${NOC}"
	    exit 37
	    ;;

    esac

done

# without -o $out_dir export to $in_dir
if [[ -z $out_dir ]]; then

    out_dir="$in_dir"

fi

# TODO DEV if in_dir is a .fit file then only convert this file
[[ -f $in_dir ]] && indir_isfile=1

case $indir_isfile in

    1)
	# in_dir is file
	in_file=$(realpath "$in_dir")
	out_file="$out_dir"

        # convert single file
	gpsbabel -i garmin_fit -f "$in_file" -o gpx -F "$out_file"
        ;;

    *)
	# in_dir is directory

	# $in_dir replace filename spaces with underscores
	find $in_dir -maxdepth 1 -type f -name "* *" -exec sh -c 'mv "$0" "${0// /_}"' {} \;

	# convert $in_dir/*.fit to $out_dir/*.gpx
	for fit_file in $(ls $in_dir/*.fit); do

	    in_file=$(realpath $fit_file)
	    out_file="$out_dir/$(basename $fit_file).gpx"

	    # convert current file
	    gpsbabel -i garmin_fit -f "$in_file" -o gpx -F "$out_file"

	done
	;;

esac
