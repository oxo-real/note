# offline (airgapped) arch installation
https://wiki.archlinux.org/title/Offline_installation

## create archiso on a local removable storage device
### use of isolatest is highly recommended

isolatest /dev/sdA							[ARCHISO]


################################
# method1 (local repo method w/ internet)
https://wiki.archlinux.org/title/Pacman/Tips_and_tricks#Installation_and_recovery
https://wiki.archlinux.org/title/Pacman/Tips_and_tricks#Installing_packages_from_a_CD/DVD_or_USB_stick

## requires an internet connection as
##	remote repositories are synched and
##	packages are downloaded (Syw) to [REPO]

assume storage device is at	/dev/sdR		[REPO]

## minimal package installation
<package(s) / -group(s)> = 'base base-devel linux linux-firmware systemd mkinitcpio vim'
### make directories
mkdir /dev/sdR/pacman/packages
mkdir /dev/sdR/pacman/database
### download packages (w/o installing / upgrading; -w instead of -u)
cd /dev/sdR/pacman/packages

pacman -Syw \
	--cachedir	/dev/sdR/pacman/packages \
	--dbpath	/dev/sdR/pacman/database/cytopyge.db.tar.xz \
	<package(s) / -group(s)>

### --cachedir <directory>
specifies alternative package cache location than the default /var/cache/pacman/packages
### --dbpath <directory>
specifies alternative package database location than the default /var/lib/pacman/database

pacman, which will reference the host installation by default,
will not properly resolve and download existing dependencies.
in cases where all packages and dependencies are wanted,
it is recommended to create a temporary blank db and reference it with --dbpath

## now install on the airgapped machine

### mounting storage device medium
```
mkdir /mnt/repo
mount /dev/sdR /mnt/repo
```

### edit pacman.conf
```
vim /etc/pacman.conf
```
copy as first repository
```
[cytopyge]
SigLevel = PackageRequired
Server = file:///mnt/repo/pacman/database
```
comment out [core], [extra] and [community]
so that pacman does not fail on the default repos

synchronize pacman database
```
pacman -Syu
#pacman -Syu --cachedir /mnt/repo/pacman/packages
```

pacstrap the packages from repo to the new installation
```
pacstrap /mnt <package(s) / -group(s)>
```

################################
# method2 (local repo method w/o internet /downloading)
### make directories on REPO
mkdir /dev/sdR/packages
mkdir /dev/sdR/packages/db

### copy packages from (up-to-date!) host machine
# use cytopyges pkg_copy (in gitlab tools)
### pkg_copy copies currently installed version of every pacman installed package
```
pkg_copy /dev/sdR/packages

```
### build custom package database on REPO
### and add package signatures if present alongside
```
repo-add /dev/sdR/packages/db/cytopyge.db.tar.zst /dev/sdR/packages/*.pkg.tar.zst
```
#[DEV] try .db.tar.xz if .db.tar.zst does not work

### this creates:
# cytopyge.db
# cytopyge.db.tar.zst
# cytopyge.files
# cytopyge.files.tar.zst


# then on the new machine
>>>>
#1. install packages not via database but manually
### !!! dependencies !!!
pacman -U /dev/sdRpackages/package.tar.zst
pacman -U /dev/sdRpackages/*.tar.zst

#2. install via
#[TODO]
redirect repo source list to local directory
update packages


###>>>
#
# requirements
#
# 1 usb1 archiso
# 2 usb2 part 1 labelled: REPO
# 3 usb2 part 2 labelled: CODE
#
#
# on source system (with internet)
#
# mount usb partition 2 [repo] as user;
#
# copy packages to repo and
#	cp /var/cache/pacman/pkg repo
# write offline database to repo
#	repo-add repo/offline.db.tar.zst repo/*.pkg.tar.zst
# with:
# pkg-copy $dst/repo
#
# then:
# mount usb partition 3 [code] as user;
#
# rsync -aAXv --delete /home/cytopyge/.local/share/c/git/code ~/dock/3
# rsync -aAXv --delete /home/cytopyge/.local/share/c/git/notes ~/dock/3
# rsync -aAXv --delete /home/cytopyge/.local/share/c/keys ~/dock/3
#
#
# iso boot
#
# mkdir tmp repo
# mount /dev/sdX3 tmp
#
# hajime/0init.sh
#
# ...
# https://bbs.archlinux.org/viewtopic.php?id=229502
#
# vim /etc/pacman.conf
# remove all #X--
# uncomment the other repos
# add [offline]
# SigLEvel = Optional
# Server = file:///root/mnt/repo
#
# on repo medium:























### copying packages installed on the current system:
#### downloading
pacman -Syw --cachedir . --dbpath [REPO] $(pacman -Q)


https://wiki.archlinux.org/title/Offline_installation_of_packages
## copy all packages to a local removable storage device [REPO]

offline:
on a up-to-date system copy local packages to [REPO]

cp -r /var/cache/pacman/pkg [REPO]

cpÂ -r $XDG_DATA_HOME/git/code/* [REPO]


## copy only the newest versions to a local removable storage device


#!/bin/bash

ARCH="x86_64"
MIRROR="https://mirrors.kernel.org/archlinux/"

wget "${MIRROR}/community/os/${ARCH}/community.db"
wget "${MIRROR}/core/os/${ARCH}/core.db"
wget "${MIRROR}/extra/os/${ARCH}/extra.db"
wget "${MIRROR}/multilib/os/${ARCH}/multilib.db"

#
## list all packages on current system
pacman -Qq

## create a list of links to the required packages
### one package
pacman -Sp vim > /mnt/packages.list
### one package group
pacman -Sp base-devel > /mnt/packages.list
### all packages on current system
pacman -Sp $(pacman -Qq) > /mnt/packages.list

## read links from input file /mnt/packages.list and save links to /mnt/packages
## requires internet connection
wget -P /mnt/packages -i /mnt/packages.list

## copy dependencies that are already installed from the cache to /mnt/packages
cp /var/cache/pacman/pkg/* /mnt/packages

## create a repository database for (just) these packages
cd packages
ls
repo-add packages.db.tar.gz *.pkg.tar.xz


loose eds:
# install package from a local file
pacman -U file.tar.gz
