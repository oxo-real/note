## remove first 1 and last 2 characters of each line
sed -i 's/^.\{1\}//' | sed 's/.\{2\}$//'

## find whole_line_matching in file and place a hashtag at the beginning of matching line
sed -i '/^whole_line_matching$/s/^/#/' file

## find whole_line_matching in file and delete line
sed -i '/^whole_line_matching$/s/^/d' file

## extract digits from string
echo 'abc123def456' | sed 's/[a-z]//g'

## remove spaces from string
echo 'abc def' | sed 's/' '//g'

## remove leading zeros
sed 's/^0*//g'

## remove all before first slash
sed 's/[^\/]*//'

## remove everything outside left and rightborder
sed 's/^.*\(leftborder.*rightborder\).*$/\1/'
# see 1.

1.
[shell script - How can I delete everything until a pattern and everything after another pattern from a line? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/243207/how-can-i-delete-everything-until-a-pattern-and-everything-after-another-pattern)
Decoded the sed s/find/replace/ syntax:

s/^.* -- substitute starting at the beginning of the line (^) followed by anything (.*) up to...
\( - start a named block
consectetuer.*elit\. - match the first word, everything (.*) up to the last word (in this case, including the trailing (escaped)dot) you want to match
\) - end the named block
match everything else (.*) to the end of the line ($)
/ - end the substitute find section
\1 - replace with the name block between the \( and the \) above
/ - end the replace


[quoting - How to ensure that string interpolated into `sed` substitution escapes all metachars - Unix & Linux Stack Exchange]
(https://unix.stackexchange.com/questions/129059/how-to-ensure-that-string-interpolated-into-sed-substitution-escapes-all-metac)

escaped_lhs=$(printf '%s\n' "$lhs" | sed 's:[][\\/.^$*]:\\&:g')
escaped_rhs=$(printf '%s\n' "$rhs" | sed 's:[\\/&]:\\&:g; $!s/$/\\/')
sed "s/$escaped_lhs/$escaped_rhs/"


ERE:
escaped_lhs=$(printf '%s\n' "$lhs" | sed 's:[][\\/.^$*+?(){}|]:\\&:g')
escaped_rhs=$(printf '%s\n' "$rhs" | sed 's:[\\/&]:\\&:g; $!s/$/\\/')
sed -E "s/$escaped_lhs/$escaped_rhs/"


zsh (BRE escaping):

set -o extendedglob
escaped_lhs=${lhs//(#m)[][\\.^$\/&]/\\$MATCH}
escaped_rhs=${rhs//(#m)[\\&\/$'\n']/\\$MATCH}
