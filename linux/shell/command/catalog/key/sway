    bindsym
bindsym $mod+Ctrl+bracketleft	gaps inner current plus 5
bindsym $mod+Ctrl+bracketright	gaps inner current minus 5
bindsym $mod+Ctrl+slash		gaps inner current set 0; gaps outer current set 0
bindsym $mod+1		    workspace $ws1
bindsym $mod+2		    workspace $ws2
bindsym $mod+3		    workspace $ws3
bindsym $mod+4		    workspace $ws4
bindsym $mod+5		    workspace $ws5
bindsym $mod+6		    workspace $ws6
bindsym $mod+7		    workspace $ws7
bindsym $mod+8		    workspace $ws8
bindsym $mod+9		    workspace $ws9
bindsym $mod+0		    workspace $ws0
bindsym $mod+Minus	    workspace $ws-
bindsym $mod+Equal	    workspace $ws=
bindsym $mod+Shift+1	    move container to workspace $ws1
bindsym $mod+Shift+2	    move container to workspace $ws2
bindsym $mod+Shift+3	    move container to workspace $ws3
bindsym $mod+Shift+4	    move container to workspace $ws4
bindsym $mod+Shift+5	    move container to workspace $ws5
bindsym $mod+Shift+6	    move container to workspace $ws6
bindsym $mod+Shift+7	    move container to workspace $ws7
bindsym $mod+Shift+8	    move container to workspace $ws8
bindsym $mod+Shift+9	    move container to workspace $ws9
bindsym $mod+Shift+0	    move container to workspace $ws0
bindsym $mod+Shift+Minus    move container to workspace $ws-
bindsym $mod+Shift+Equal    move container to workspace $ws=
bindsym $mod+tab		workspace back_and_forth
#bindsym $mod+bracketright	workspace next
#bindsym $mod+bracketleft	workspace prev
bindsym $mod+o			workspace prev
bindsym $mod+Period		workspace next
#bindsym $mod+grave		exec $term --app-id="float_spicules" \
bindsym $mod+grave		exec $term --class="float_spicules" -e \
bindsym $mod+b			bar mode toggle
bindsym $mod+Control+b 		exec $i3b_cycle
# # bindsym $mod+b		exec killall -SIGUSR1 waybar
bindsym $mod+Shift+b	border toggle
bindsym $mod+Shift+space    input $touchpad \
bindsym $mod+$left		focus left
bindsym $mod+$down	        focus down
bindsym $mod+$up		focus up
bindsym $mod+$right		focus right
bindsym $mod+Shift+$left	$smt left $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$down	$smt down $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$up		$smt up $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$right	$smt right $move_regular_step px or $move_regular_step ppt
bindsym $mod+Shift+$la		$smt left $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$da		$smt down $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$ua		$smt up $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$ra		$smt right $move_major_step px or $move_major_step ppt
bindsym $mod+Shift+$li		$smt left $move_minor_step px or $move_minor_step ppt
bindsym $mod+Shift+$di		$smt down $move_minor_step px or $move_minor_step ppt
bindsym $mod+Shift+$ui		$smt up $move_minor_step px or $move_minor_step ppt
bindsym $mod+Shift+$ri		$smt right $move_minor_step px or $move_minor_step ppt
bindsym $mod+Mod1+j		floating enable; $smt W
bindsym $mod+Mod1+Comma		floating enable; $smt S
bindsym $mod+Mod1+i          	floating enable; $smt N
bindsym $mod+Mod1+l		floating enable; $smt E
#bindsym $mod+Mod1+$left	floating enable; $smt W
#bindsym $mod+Mod1+$down        floating enable; $smt S
#bindsym $mod+Mod1+$up          floating enable; $smt N
#bindsym $mod+Mod1+$right	floating enable; $smt E
bindsym $mod+Mod1+u		floating enable; $smt NW
bindsym $mod+Mod1+o		floating enable; $smt NE
bindsym $mod+Mod1+m		floating enable; $smt SW
bindsym $mod+Mod1+Period	floating enable; $smt SE
bindsym $mod+Mod1+k		floating enable; $smt Z
#bindsym $mod+Mod1+5		floating enable; $smt Z
bindsym $mod+Mod1+7		floating enable; exec sh $csc/float_v_fill
bindsym $mod+Mod1+8		floating enable; exec sh $csc/float_h_fill
bindsym $mod+Mod1+0		floating enable; $smt Z; exec sh $csc/float_min
bindsym $mod+Mod1+1		floating enable; exec sh $csc/float_divide 1
bindsym $mod+Mod1+2		floating enable; exec sh $csc/float_divide 2
bindsym $mod+Mod1+3		floating enable; exec sh $csc/float_divide 3
bindsym $mod+Mod1+4		floating enable; exec sh $csc/float_divide 4
bindsym $mod+Mod1+9		floating enable; $smt Z; exec sh $csc/float_max
bindsym $mod+Control+$left	resize shrink width $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$down	resize grow height $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$up	resize shrink height $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$right	resize grow width $resize_regular_step px or $resize_regular_step ppt
bindsym $mod+Control+$la	resize shrink width $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$da	resize grow height $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$ua	resize shrink height $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$ra	resize grow width $resize_major_step px or $resize_major_step ppt
bindsym $mod+Control+$li	resize shrink width $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Control+$di	resize grow height $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Control+$ui	resize shrink height $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Control+$ri	resize grow width $resize_minor_step px or $resize_minor_step ppt
bindsym $mod+Shift+q		kill
bindsym $mod+Mod1+q		kill
bindsym $mod+backslash		layout toggle split; exec $csc/layout_ntfy_send
bindsym $mod+Shift+backslash	layout toggle splith splitv stacking tabbed; exec $csc/layout_ntfy_send
bindsym $mod+Control+Minus   	    exec swaymsg opacity minus 0.1
bindsym $mod+Control+Shift+Minus    exec swaymsg opacity plus 0.1
bindsym $mod+Control+Equal	    exec swaymsg opacity 1.0
bindsym $mod+Control+0		    exec swaymsg opacity 0.0
bindsym $mod+f		        fullscreen toggle
#bindsym $mod+a			focus parent  ## default
#bindsym $mod+p			focus parent  ## replaced by screen capture
#bindsym $mod+i			focus child  ## default
bindsym $mod+c			focus child
bindsym $mod+semicolon		focus mode_toggle
bindsym $mod+Control+semicolon 	floating toggle
bindsym $mod+Mod1+semicolon 	floating toggle
bindsym $mod+Shift+s	 	sticky toggle
bindsym $mod+Shift+slash	move scratchpad
bindsym $mod+slash		scratchpad show
bindsym $mod+Return		exec --no-startup-id $csc/term_spawn &
bindsym $mod+Shift+Return	exec --no-startup-id $csc/term_spawn pwd &
bindsym $mod+Mod1+Return	exec --no-startup-id $csc/term_spawn $HOME float &
bindsym $mod+Mod1+Shift+Return	exec --no-startup-id $csc/term_spawn pwd float &
#bindsym $mod+d			exec $term --app-id="float_fzf_run" \
bindsym $mod+d			exec --no-startup-id $term --class="float_fzf_run" \
#bindsym $mod+z			exec $term --app-id="float_spicules" \
bindsym $mod+z			exec --no-startup-id $term --class="float_spicules" \
# TODO bindsym Control+Shift+o	secure copy (wl-copy -o)
#bindsym Control+Shift+y	exec $term --app-id="float_spicules" \
bindsym Control+Shift+y		exec --no-startup-id $term --class="float_spicules" \
#bindsym $mod+Shift+x		exec $term --app-id="float_exit" \
bindsym $mod+Shift+x		exec --no-startup-id $term --class="float_exit" \
#bindsym $mod+Shift+s		exec $XDG_CONFIG_HOME/sway/code/screen_onf
bindsym $mod+Shift+z		exec sh $csc/dimr swaylock
#bindsym $mod+Shift+Slash	exec $csc/dimr screen_off
bindsym $mod+Control+Shift+e	exec sh $csc/dimr swaylock_enable 120
bindsym $mod+Control+Shift+d	exec sh $csc/dimr swaylock_disable
bindsym $mod+Shift+c		reload
bindsym XF86MonBrightnessDown	exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp	exec brightnessctl set 5%+
#bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 10 && sway-brightness-notify
#bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 10 && sway-brightness-notify
bindsym XF86AudioRaiseVolume	exec wpctl set-volume	@DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume 	exec wpctl set-volume	@DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioMute 		exec wpctl set-mute	@DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioMicMute 	exec wpctl set-mute	@DEFAULT_AUDIO_SOURCE@ toggle
bindsym F9			exec wpctl set-mute	@DEFAULT_AUDIO_SOURCE@ toggle
#bindsym XF86AudioLowerVolume	exec amixer sset Master 2%-
#bindsym XF86AudioRaiseVolume	exec amixer sset Master 2%+
#bindsym XF86AudioMute		exec amixer sset Master toggle
#bindsym XF86AudioMute		exec amixer sset Master toggle && \
bindsym --locked XF86AudioPlay 	exec playerctl play-pause
bindsym XF86AudioNext 		exec playerctl next
bindsym XF86AudioPrev 		exec playerctl previous
#bindsym XF86AudioNext		exec lmc next
#bindsym XF86AudioPlay		exec lmc toggle
#bindsym XF86AudioPrev		exec lmc prev
#bindsym XF86AudioStop		exec lmc toggle
bindsym XF86Search 		exec $menu
bindsym $mod+m			exec --no-startup-id $term --class="float_spicules" \
bindsym Shift+Control+Mod1+x	exec mic_switch toggle Webcam C310
bindsym Shift+Control+Mod1+v 	exec --no-startup-id $term --class="term_float_inv" \
bindsym $mod+p			exec grim -o $(swaymsg -t get_outputs \
bindsym $mod+Mod1+p		exec grim \
bindsym --release $mod+Shift+p	exec grim -g "$(slurp)" \
bindsym $mod+Control+p		exec grim -g "$(slurp)" | wl-copy && \
bindsym $mod+Mod1+c		exec grim -g "$(slurp -p)" -t ppm - | \
#bindsym Shift+Control+y	wl-copy -o -n && exec notify-send 'secure copy is in DEV'
bindsym Shift+Control+0		exec echo -n '' | wl-copy && notify-send 'clipboard cleared'
bindsym Control+Grave		exec date +'%Y%m%d_%H%M%S_%s' | wl-copy && notify-send 'current date_time copied'
bindsym Shift+Control+Mod1+e	exec vtxt begin en
bindsym Shift+Control+Mod1+r	exec vtxt end
bindsym Shift+Control+Mod1+n	exec vtxt begin nl
bindsym Shift+Control+Mod1+m	exec vtxt end
bindsym Shift+Control+Mod1+s	exec vtxt begin sv
bindsym Shift+Control+Mod1+d	exec vtxt end
